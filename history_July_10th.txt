 1004  ls
 1005  grep -r 'dispersion'
 1006  cp ~/backup_2025/BenchMARL/jack_readme.txt ./
 1007  ls
 1008  emacs jack_readme.txt &
 1009  conda activate Bmarl
 1010  python benchmarl/run.py algorithm=masac task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true experiment.max_n_frames=60000000 off_policy_n_envs_per_worker=60 off_policy_collected_frames_per_batch=20000 ask.n_agents=3 task.n_food=3
 1011  python benchmarl/run.py algorithm=masac task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true experiment.max_n_frames=60000000 experiment.off_policy_n_envs_per_worker=60 experiment.off_policy_collected_frames_per_batch=20000 ask.n_agents=3 task.n_food=3
 1012  python benchmarl/run.py algorithm=masac task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true experiment.max_n_frames=60000000 experiment.off_policy_n_envs_per_worker=60 experiment.off_policy_collected_frames_per_batch=20000 task.n_agents=3 task.n_food=3
 1013  cd src/BenchMARL/
 1014  ls
 1015  ls -lsrt
 1016  more outputs/
 1017  mv '#jack_readme.txt#' jack_readme.txt 
 1018  emacs jack_readme.txt &
 1019  find . -type f -name "*.pt" -exec ls -lsrt --time-style=long-iso {} +
 1020  cd outputs/2025-06-26/08-21-44/
 1021  ls
 1022  cd masac_dispersion_mlp__8d039d19_25_06_26-08_21_44/
 1023  ls
 1024  cd masac_dispersion_mlp__8d039d19_25_06_26-08_21_44/
 1025  ls
 1026  ls videos/
 1027  ls -lsrt
 1028  ls -lsrt videos/
 1029  cp videos/eval_video_999.mp4 ~/
 1030  ls
 1031  cd Downloads/
 1032  ls -lsrt
 1033  cd ../src/
 1034  ls
 1035  conda env list
 1036  conda acitvate jaxMarl
 1037  conda activate jaxMarl
 1038  ls -lsrt
 1039  cd JaxMARL/
 1040  ls
 1041  ls -lsrt
 1042  more test.py
 1043  emacs simple.py &
 1044  python simple.py 
 1045  python test.py 
 1046  pip install brax
 1047  python simple.py 
 1048  conda create env --name jupyter python=3.12
 1049  conda create --name jupyter python=3.12
 1050  conda activate jupyter
 1051  pip install jupyterlab
 1052  jupyter lab
 1053  cd jaxmarl/tutorials/
 1054  jupyter lab
 1055  cd
 1056  cd src/
 1057  conda deactivate
 1058  conda create --name mava python=3.12
 1059  conda activate mava
 1060  git clone https://github.com/instadeepai/Mava.git
 1061  cd Mava
 1062  pip install -e ".[cuda12]"  
 1063  python mava/systems/ppo/anakin/ff_ippo.py
 1064  pip install cuSPARSE
 1065  nvidia-smi
 1066  nvcc --version
 1067  pip list | grep jax
 1068  # Uninstall existing JAX completely
 1069  pip uninstall jax jaxlib jax-plugins -y
 1070  # Install JAX with CUDA 12 support (this should work with your 12.6 toolkit)
 1071  pip install --upgrade "jax[cuda12_pip]" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html
 1072  pip list | grep jax
 1073  # inside the same (mava) env
 1074  export LD_LIBRARY_PATH="$CONDA_PREFIX/lib:/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
 1075  python - <<'PY'
 1076  import jax; print(jax.devices())
 1077  PY
 1078  pip install -U "jax[cuda12]"
 1079  pip install --force-reinstall "jax[cuda12_local]==0.6.0"
 1080  python mava/systems/ppo/anakin/ff_ippo.py
 1081  # still in the (mava) env
 1082  pip uninstall -y jax jaxlib jax-cuda12-plugin jax-cuda12-pjrt
 1083  pip install "numpy==1.26.4" "scipy==1.12.0"          # satisfy Mava pins
 1084  # all one command â€“ adjust the 12.6.* if you really want 12.8.*, but keep them consistent
 1085  pip install --upgrade "jax[cuda12]==0.6.2"   nvidia-cublas-cu12==12.6.*   nvidia-cusparse-cu12==12.6.*   nvidia-cusolver-cu12==12.6.*   nvidia-cudnn-cu12==9.8.*
 1086  nividia-smi -l
 1087  nvidia-smi -l
 1088  cd ../JaxMARL/
 1089  conda deactivate
 1090  grep -r 'tensorboard'
 1091  ls
 1092  grep -r 'checkpoint'
 1093  grep -r 'tensorboard'
 1094  nvidia-smi
 1095  nvidia-smi -l
 1096  conda env list
 1097  conda activate b_marl
 1098  cd src/BenchMARL/
 1099  ls
 1100  nvidia-smi
 1101  conda deactivate
 1102  cd ../attention/
 1103  cd ..
 1104  mv BenchMARL/ ~/backup_2025/
 1105  nvidia-smi
 1106  nvidia-smi -l
 1107  cd BenchMARL/
 1108  grep -r 'off_policy_n'
 1109  nvidia-smi -l
 1110  ls
 1111  cd ~/Downloads/
 1112  ls
 1113  mkdir readme
 1114  mv *.md readme/
 1115  ls
 1116  conda env list
 1117  cd ../src/JaxMARL/
 1118  ls
 1119  emacs train.py &
 1120  conda activate jaxMARL
 1121  conda env list
 1122  conda activate jaxMarl
 1123  python train.py 
 1124  df
 1125  cd ../Mava/
 1126  ls
 1127  find . -name ff_ippo.yaml
 1128  cd ../JaxMARL/
 1129  ls
 1130  python train.py 
 1131  python simple.py 
 1132  python train.py
 1133  emacs train.py &
 1134  python train.py
 1135  cd src/BenchMARL/
 1136  ls
 1137  cd ../attention/
 1138  conda activate attent
 1139  history
 1140  conda deactivate
 1141  cd ../BenchMARL/
 1142  conda activate b_marl
 1143  emacs jack_readme.txt &
 1144  conda deactivate
 1145  cd ..
 1146  ls -lsrt
 1147  cd MARLlib/
 1148  conda env list
 1149  conda activate marllib
 1150  ls
 1151  more jmv_test.py
 1152  conda deactivate
 1153  conda activate marllib
 1154  ls
 1155  emacs jmv_test.py &
 1156  python jmv_test.py 
 1157  pip uninstall torch torchvision torchaudio -y
 1158  # For CUDA 12.1 and later (if your drivers are >= 530.x)
 1159  pip install torch==2.2.2 torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
 1160  python jmv_test.py 
 1161  pip uninstall torch torchvision torchaudio -y
 1162  pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
 1163  pip install --upgrade pip
 1164  pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu128
 1165  pip3 install torch torchvision torchaudio
 1166  python jmv_test.py 
 1167  ls
 1168  ls -lsrt
 1169  cd exp_results/
 1170  ls
 1171  cd mappo_mlp_simple_spread/
 1172  ls
 1173  ls -lsrt
 1174  ls
 1175  cd ..
 1176  ls
 1177  emacs visual.py &
 1178  ls
 1179  python visual.py 
 1180  ls exp_results/mappo_mlp_simple_spread/MAPPOTrainer_mpe_simple_spread_17a3f_00000_0_2025-06-25_07-11-07/checkpoint_003125/
 1181  ls exp_results/mappo_mlp_simple_spread/MAPPOTrainer_mpe_simple_spread_17a3f_00000_0_2025-06-25_07-11-07/checkpoint_003125/checkpoint-3125
 1182  python visual.py 
 1183  python -c "import ray; print(ray.__version__)"
 1184  python visual.py 
 1185  more requirements.txt 
 1186  python visual.py 
 1187  emacs examples/load_and_render_model.py &
 1188  ls exp_results/mappo_mlp_simple_spread/
 1189  ls exp_results/mappo_mlp_simple_spread/MAPPOTrainer_mpe_simple_spread_17a3f_00000_0_2025-06-25_07-11-07/params.json 
 1190  python load_and_render_model.py 
 1191  emacs render.py &
 1192  python render.py 
 1193  pip install numpy==1.20.3  # Match your training environment
 1194  conda deactivate
 1195  cd ..
 1196  conda acitivate b_marl
 1197  conda activate b_marl
 1198  python
 1199  pip freeze > b_marl_requirements.txt
 1200  conda deactivate
 1201  conda create -name Bmarl python=3.11.13
 1202  conda create --name Bmarl python=3.11.13
 1203  conda activate Bmarl
 1204  pip3 install torchrl
 1205  git clone https://github.com/facebookresearch/BenchMARL.git
 1206  ls -lsrt
 1207  mv b_marl_requirements.txt BenchMARL/
 1208  cd BenchMARL/
 1209  ls
 1210  more b_marl_requirements.txt 
 1211  pip install -e BenchMARL
 1212  cd ..
 1213  pip install -e BenchMARL
 1214  pip install vmas
 1215  python
 1216  python benchmarl/run.py algorithm=mappo task=vmas/balance
 1217  cd BenchMARL/
 1218  python benchmarl/run.py algorithm=mappo task=vmas/balance
 1219  pip install wandb
 1220  python benchmarl/run.py algorithm=mappo task=vmas/balance
 1221  pip install moviepy
 1222  python benchmarl/run.py algorithm=mappo task=vmas/balance
 1223  ls
 1224  ls outputs/
 1225  python benchmarl/run.py algorithm=mappo task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true
 1226  emacs benchmarl/conf/task/vmas/dispersion.yaml &
 1227  emacs benchmarl/conf/config.yaml &
 1228  grep -r 'sampling_device'
 1229  emacs benchmarl/conf/task/vmas/dispersion.yaml &
 1230  find . -name 'experiment.yaml'
 1231  grep -r 'sampling_device'
 1232  emacs benchmarl/conf/experiment/base_experiment.yaml &
 1233  python benchmarl/run.py algorithm=mappo task=vmas/dispersion    algorithm.entropy_coef=0.02   experiment.max_n_frames=600000
 1234  emacs benchmarl/conf/task/vmas/dispersion.yaml &
 1235  python benchmarl/run.py algorithm=mappo task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true algorithm.entropy_coef=0.02
 1236  python benchmarl/run.py algorithm=mappo task=vmas/dispersion  experiment.checkpoint_interval=120000 experiment.checkpoint_at_end=true algorithm.entropy_coef=0.02 experiment.max_n_frames=60000000
 1237  cd src/JaxMARL/
 1238  cd baselines/
 1239  ls
 1240  cd IPPO/
 1241  ls
 1242  emacs ippo_ff_mpe.py &
 1243  cd ..
 1244  find . -name 'ippo_ff_mpe.yaml'
 1245  eamcs baselines/IPPO/config/ippo_ff_mpe.yaml &
 1246  emacs baselines/IPPO/config/ippo_ff_mpe.yaml &
 1247  tail train.py
 1248  tail -100  train.py
 1249  emacs  train.py &
 1250  ls -lsrt
 1251  python
 1252  nvidia-smi
 1253  ls -lsrt
 1254  cd outputs/
 1255  ls
 1256  cd 2025-06-2
 1257  cd 2025-06-27
 1258  ls
 1259  ls -lsrt
 1260  ls 07-34-19/
 1261  ls
 1262  cd ..
 1263  ls
 1264  ls *.gif
 1265  ls -lsrt
 1266  grep -r 'silent'
 1267  cd .
 1268  cd ..
 1269  ls -lsrt
 1270  cd src/
 1271  ls
 1272  ls -lsrt
 1273  cd JaxMARL/
 1274  ls
 1275  emacs train.py &
 1276  conda env list
 1277  ls -lsrt ~/miniconda3/envs/
 1278  conda activate jaxMarl
 1279  ls
 1280  python train.py 
 1281  emacs simple.py &
 1282  python train.py 
 1283  grep -r '.gif'
 1284  grep -r 'animation.gif'
 1285  grep -r --dtype='*.py'  'animation.gif'
 1286  man grep
 1287  grep -r --include='*.py'  'animation.gif'
 1288  python train.py 
 1289  ls
 1290  mv agents_5v5.gif ~/
 1291  python train.py 
 1292  cd baselines/IPPO/
 1293  python ippo_ff_mpe.py 
 1294  cd ..
 1295  python ippo_ff_mpe.py 
 1296  ls -lsrt
 1297  mv ippo_ff_MPE_simple_spread_v3.png ~/
 1298  python ippo_ff_mpe.py 
 1299  more baselines/IPPO/config/ippo_ff_mpe.yaml
 1300  emacs train.py &
 1301  python ippo_ff_mpe.py 
 1302  ls
 1303  python ippo_ff_mpe.py 
 1304  ls
 1305  rm -rf spread_*.gif
 1306  python ippo_ff_mpe.py 
 1307  rm -rf spread_*.gif
 1308  python ippo_ff_mpe.py 
 1309  rm -rf spread_*.gif
 1310  python ippo_ff_mpe.py 
 1311  ls
 1312  python ippo_ff_mpe.py 
 1313  ls
 1314  python ippo_ff_mpe.py 
 1315  ls
 1316  ls checkpoints/
 1317  cd checkpoints/
 1318  ls
 1319  pwd
 1320  cd ..
 1321  ls
 1322  python ippo_ff_mpe.py 
 1323  conda create --name evora python=3.8
 1324  conda activate evora
 1325  pip3 install numba pandas scipy scikit-learn matplotlib notebook
 1326  from numba import cuda
 1327  gpu = cuda.get_current_device()
 1328  print("name = %s" % gpu.name)
 1329  print("maxThreadsPerBlock = %s" % str(gpu.MAX_THREADS_PER_BLOCK))
 1330  print("maxBlockDimX = %s" % str(gpu.MAX_BLOCK_DIM_X))
 1331  print("maxBlockDimY = %s" % str(gpu.MAX_BLOCK_DIM_Y))
 1332  print("maxBlockDimZ = %s" % str(gpu.MAX_BLOCK_DIM_Z))
 1333  print("maxGridDimX = %s" % str(gpu.MAX_GRID_DIM_X))
 1334  print("maxGridDimY = %s" % str(gpu.MAX_GRID_DIM_Y))
 1335  print("maxGridDimZ = %s" % str(gpu.MAX_GRID_DIM_Z))
 1336  print("maxSharedMemoryPerBlock = %s" % str(gpu.MAX_SHARED_MEMORY_PER_BLOCK))
 1337  print("asyncEngineCount = %s" % str(gpu.ASYNC_ENGINE_COUNT))
 1338  print("canMapHostMemory = %s" % str(gpu.CAN_MAP_HOST_MEMORY))
 1339  print("multiProcessorCount = %s" % str(gpu.MULTIPROCESSOR_COUNT))
 1340  print("warpSize = %s" % str(gpu.WARP_SIZE))
 1341  print("unifiedAddressing = %s" % str(gpu.UNIFIED_ADDRESSING))
 1342  print("pciBusID = %s" % str(gpu.PCI_BUS_ID))
 1343  print("pciDeviceID = %s" % str(gpu.PCI_DEVICE_ID))
 1344  cd src/
 1345  ls
 1346  git clone https://github.com/mit-acl/mppi_numba.git
 1347  cd mppi_numba/
 1348  ls
 1349  emacs gpu_test.py &
 1350  python gpu_test.py 
 1351  jupyter notebook 
 1352  cd src/RoboTerrain/
 1353  ls
 1354  grep -r "<update_rate>10</update_rate>"
 1355  grep -r "<update_rate>30</update_rate>"
 1356  grep -r "<update_rate>"
 1357  df
 1358  cd ~/data/social_nav/gazebo/gazebo_002/
 1359  rm -rf sequence_025/
 1360  rm -rf sequence_026
 1361  rm -rf sequence_027
 1362  rm -rf sequence_028
 1363  rm -rf sequence_029
 1364  rm -rf sequence_030
 1365  rm -rf sequence_031
 1366  rm -rf sequence_032
 1367  rm -rf sequence_033
 1368  rm -rf sequence_071
 1369  rm -rf sequence_072
 1370  rm -rf sequence_073
 1371  rm -rf sequence_074
 1372  rm -rf sequence_075
 1373  rm -rf sequence_076
 1374  rm -rf sequence_077
 1375  rm -rf sequence_043
 1376  rm -rf sequence_044
 1377  rm -rf sequence_045
 1378  rm -rf sequence_046
 1379  rm -rf sequence_047
 1380  rm -rf sequence_048
 1381  rm -rf sequence_049
 1382  rm -rf sequence_055
 1383  rm -rf sequence_056
 1384  rm -rf sequence_057
 1385  rm -rf sequence_058
 1386  rm -rf sequence_059
 1387  rm -rf sequence_060
 1388  rm -rf sequence_061
 1389  rm -rf sequence_062
 1390  rm -rf sequence_063
 1391  rm -rf sequence_097
 1392  rm -rf sequence_098
 1393  rm -rf sequence_099
 1394  rm -rf sequence_100/
 1395  cd ../gazebo_001/
 1396  rm -rf sequence_072/
 1397  rm -rf sequence_073
 1398  rm -rf sequence_081/
 1399  rm -rf sequence_082/
 1400  rm -rf sequence_083/
 1401  rm -rf sequence_084/
 1402  rm -rf sequence_092
 1403  rm -rf sequence_093
 1404  rm -rf sequence_094
 1405  rm -rf sequence_095
 1406  rm -rf sequence_096
 1407  rm -rf sequence_097
 1408  rm -rf sequence_098
 1409  cd ..
 1410  ls
 1411  find . -name "*.png" | wc -l
 1412  cd src/attention/
 1413  ls
 1414  cd test/
 1415  ls
 1416  ls -lsrt
 1417  emacs test_attention_2.py &
 1418  ls
 1419  cd ..
 1420  ls
 1421  ls model_ouput/
 1422  ls -lsrt
 1423  ls model_output/
 1424  cd test/
 1425  history > history_06_28.txt
 1426  emacs history_06_28.txt &
 1427  cd ..
 1428  ls checkpoints/
 1429  cd model_output/
 1430  ls
 1431  python run_efficient_training.py --dataset_path /home/jack/data/social_nav/gazebo/ --num_epochs 5000 --batch_size 4 --sequence_length 5 --target_width 320 --target_height 320 --yolo_model_path models/yolo11n.onnx --embedding_dim 128 --num_heads 4 --resume_checkpoin
 1432  cd ..
 1433  find . -name checkpoint_epoch_3290.pkl
 1434  ls checkpoints/
 1435  cp model_output/checkpoint_epoch_2860.pkl checkpoints/
 1436  ls
 1437  ls model
 1438  ls models
 1439  ls model_output/
 1440  mv model_output/ ~/backup_2025/model_output_attention_06_28_25/
 1441  df
 1442  conda env list
 1443  cd ~/miniconda3/envs/
 1444  du * -sh
 1445  conda remove -n Bmarl --all
 1446  conda remove -n isaaclab --all
 1447  df
 1448  ls -lsrt
 1449  conda remove -n jaxmarl --all
 1450  ls -lsrt
 1451  conda remove -n torchML --all
 1452  df
 1453  ls
 1454  cd
 1455  cd src/
 1456  cd attention/
 1457  conda activate attent
 1458  ls
 1459  cd test/
 1460  ls
 1461  ls ../checkpoints/
 1462  python test_attention_2.py --checkpoint ../checkpoints/checkpoint_epoch_2860.pkl
 1463  cp test_attention_2.py ../
 1464  cd ..
 1465  ls
 1466  python test_attention_2.py --checkpoint ./checkpoints/checkpoint_epoch_2860.pkl
 1467  cd test_attention/
 1468  ls
 1469  ls -lsrt
 1470  cd ..
 1471  ls model_output/
 1472  python run_efficient_training.py --dataset_path /home/jack/data/social_nav/gazebo/ --num_epochs 5000 --batch_size 4 --sequence_length 5 --target_width 320 --target_height 320 --yolo_model_path models/yolo11n.onnx --embedding_dim 128 --num_heads 4 --resume_checkpoint model_output/checkpoint_epoch_3600.pkl 
 1473  python run_efficient_training.py --dataset_path /home/jack/data/social_nav/gazebo/ --num_epochs 10000 --batch_size 4 --sequence_length 5 --target_width 320 --target_height 320 --yolo_model_path models/yolo11n.onnx --embedding_dim 128 --num_heads 4 --resume_checkpoint model_output/checkpoint_epoch_5000.pkl 
 1474  ls checkpoints/
 1475  ls -lsrt
 1476  cd checkpoints/
 1477  ls -lsrt
 1478  cd ..
 1479  emacs preprocess_dataset.py &
 1480  mv model_output/ ~/backup_2025/model_output_attention_06_29
 1481  ls preprocessed_data/
 1482  rm preprocessed_data/gazebo_seq5_stride*
 1483  python run_efficient_training.py --dataset_path /home/jack/data/social_nav/gazebo/ --num_epochs 6000 --batch_size 4 --sequence_length 5 --target_width 320 --target_height 320 --yolo_model_path models/yolo11n.onnx --embedding_dim 128 --num_heads 4 --resume_checkpoint checkpoints/checkpoint_epoch_2351.pkl 
 1484  ls preprocessed_data/
 1485  python run_efficient_training.py --dataset_path /home/jack/data/social_nav/gazebo/ --num_epochs 6000 --batch_size 4 --sequence_length 5 --target_width 320 --target_height 320 --yolo_model_path models/yolo11n.onnx --embedding_dim 128 --num_heads 4 --resume_checkpoint checkpoints/checkpoint_epoch_2351.pkl 
 1486  sudo apt update
 1487  sudo apt-key del F42ED6FBAB17C654
 1488  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | sudo tee /etc/apt/trusted.gpg.d/ros.asc > /dev/null
 1489  sudo apt update
 1490  curl -fsSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | gpg --dearmor -o ros-archive-keyring.gpg
 1491  sudo mv ros-archive-keyring.gpg /etc/apt/trusted.gpg.d/
 1492  sudo apt update
 1493  # Remove the old expired key
 1494  sudo apt-key del F42ED6FBAB17C654
 1495  # Add the updated ROS2 repository key
 1496  curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | sudo apt-key add -
 1497  # Alternative method using the new keyring approach (recommended)
 1498  # Remove old key first if it exists
 1499  sudo rm -f /usr/share/keyrings/ros-archive-keyring.gpg
 1500  # Download and install the new key
 1501  curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | sudo gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg
 1502  # Update the repository source to use the new keyring
 1503  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
 1504  # Update package lists
 1505  sudo apt update
 1506  sudo apt remove --purge dropbox
 1507  sudo rm -f /etc/apt/sources.list.d/dropbox.list
 1508  sudo apt-key del 1C61A2656FB57B7E4DE0F4C1FC918B335044912E
 1509  ls -a
 1510  rm -rf .dropbox
 1511  rm -rf .dropbox-dist/
 1512  sudo rm -f /usr/share/applications/dropbox.desktop
 1513  rm -f ~/.local/share/applications/dropbox.desktop
 1514  sudo apt update
 1515  sudo apt autoremove
 1516  apt list --upgradable
 1517  cd src/
 1518  ls
 1519  cd ../Downloads/
 1520  ls
 1521  rm README*
 1522  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1523  docker ps
 1524  docker exec -it docker-wvn_nvidia-1 bash
 1525  cd docker/
 1526  ls
 1527  cd ..
 1528  cd src/
 1529  ls
 1530  cd ..
 1531  find . -type d -name 'wild_visual_navigation'
 1532  ls -l git/wild_visual_navigation/
 1533  ls -l src/git/wild_visual_navigation/
 1534  cd src/git/
 1535  ls
 1536  rm -rf wild_visual_navigation/
 1537  ls]
 1538  ls
 1539  ls ~/git/
 1540  ls
 1541  emacs gpt_notes.txt &
 1542  cd ~/git/wild_visual_navigation/
 1543  ls
 1544  cd ~/git/wild_visual_navigation/docker/
 1545  ls
 1546  ls -lsrt
 1547  xhost +local:root
 1548  docker compose -f docker-compose-gui-nvidia.yaml up -d
 1549  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1550  cd git/wild_visual_navigation/docker/
 1551  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1552  docker ps
 1553  docker compose -f docker-compose-gui-nvidia.yaml up -d
 1554  cd git/wild_visual_navigation/
 1555  ls
 1556  cd docker/
 1557  docker compose -f docker-compose-gui-nvidia.yaml up -d
 1558  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1559  xhost +local:root 
 1560  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1561  cd git/wild_visual_navigation/docker/
 1562  docker compose -f docker-compose-gui-nvidia.yaml exec wvn_nvidia /bin/bash
 1563  cd
 1564  cd src/
 1565  ls
 1566  cd ../git/
 1567  ls
 1568  find . -name wvn_feature_extractor_node.py
 1569  cd wild_visual_navigation/wild_visual_navigation_jackal/launch/
 1570  ls
 1571  grep -r 'move_base'
 1572  grep -r 'local_planner'
 1573  ls
 1574  cd ..
 1575  grep -r 'local_planner'
 1576  grep -r 'move_base'
 1577  grep -r 'elevation_mapping'
 1578  cd
 1579  cd src/
 1580  ls
 1581  ls -lsrt
 1582  cd mppi_numba/
 1583  ls
 1584  cd src/mppi_numba/mppi_numba/
 1585  emacs mppi.py &
 1586  cd ..
 1587  grep -r 'image'
 1588  grep -r --include='*.ipynb' 'image'
 1589  grep -r --include='*.ipynb' 'img ='
 1590  grep -r --include='*.py' 'map'
 1591  grep -r --include='*.py' 'terrain'
 1592  ls
 1593  cd tdm_models/
 1594  ls
 1595  cd ..
 1596  ls 
 1597  ls mppi_numba/
 1598  ls mppi_benchmark/
 1599  ls tdm_models/
 1600  ls tdm_models/ground_truth/
 1601  ls tdm_models/ground_truth/fells_nn/
 1602  cd Downloads/
 1603  cd ..
 1604  find . -name 'Evora*.pdf'
 1605  conda env list
 1606  ls -lsrt miniconda3/envs/
 1607  conda acitvate evora
 1608  conda activate evora
 1609  cd src/
 1610  ls
 1611  ls -lsrt
 1612  cd mppi_numba/
 1613  ls
 1614  jupyter notebook
 1615  cd src/
 1616  ls
 1617  git clone https://github.com/amslabtech/dwa_planner.git && cd dwa_planner
 1618  docker compose up
 1619  ls
 1620  eamcs docker-compose.yml &
 1621  emacs docker-compose.yml &
 1622  ls
 1623  find . -name 'dockerfile'
 1624  emacs Dockerfile &
 1625  docker compose up
 1626  docker compose up -d
 1627  docker compose exec demo /bin/bash
 1628  docker ps
 1629  docker compose up -d
 1630  docker compose exec demo /bin/bash
 1631  docker run -it --rm   --name dwa_planner   -e DISPLAY=$DISPLAY   -v /tmp/.X11-unix:/tmp/.X11-unix:rw   --network host   dwa_planner-upgraded:latest   /bin/bash
 1632  docker ps
 1633  docker run -it --rm   --name dwa_planner_v2   -e DISPLAY=$DISPLAY   -v /tmp/.X11-unix:/tmp/.X11-unix:rw   --network host   dwa_planner-upgraded:latest   /bin/bash
 1634  docker run -it --rm   --name dwa_planner_v2   --gpus all   -e DISPLAY=$DISPLAY   -e NVIDIA_VISIBLE_DEVICES=all   -e NVIDIA_DRIVER_CAPABILITIES=all   -v /tmp/.X11-unix:/tmp/.X11-unix:rw   --network host   dwa_planner-upgraded:latest   /bin/bash
 1635  cd ../mppi_numba/
 1636  ls
 1637  cd src/dwa_planner/
 1638  cp Dockerfile Dockerfile.txt
 1639  docker ps
 1640  docker commit 8a62c8b4f7d7 dwa_planner-upgraded:latest
 1641  docker images
 1642  docker ps
 1643  docker exec -it dwa_planner_v2 bash
 1644  ls
 1645  nvidia-smi
 1646  cd src/
 1647  ls 
 1648  ls -lsrt
 1649  cd dwa_planner/
 1650  ls
 1651  cd ~/src/RoboTerrain/ros2_ws/src/dynamic_obstacles
 1652  ls
 1653  ros2 bag record
 1654  ros2 bag record /rover/pose_array
 1655  cd src/
 1656  ls
 1657  grep -r --type=*.txt 'spawn.py'
 1658  grep -r --include=*.txt 'spawn.py'
 1659  eamcs attention/jack_readme.txt &
 1660  emacs attention/jack_readme.txt &
 1661  cd RoboTerrain/ros2_ws/src/
 1662  ls
 1663  python ign_ros2_pose_topic.py inspect rover_zero4wd
 1664  cd src/
 1665  ls
 1666  more jack_notes.txt
 1667  ros2 run teleop_twist_keyboard teleop_twist_keyboard
 1668  cd RoboTerrain/
 1669  ls
 1670  cd ros2_ws/
 1671  cd src/dynamic_obstacles/
 1672  ls
 1673  ros2 run teleop_twist_keyboard teleop_twist_keyboard
 1674  nvidia-smi
 1675  cd src/
 1676  ls
 1677  cd attention/
 1678  ls
 1679  cd ../RoboTerrain/
 1680  ls
 1681  cd 
 1682  ls
 1683  cd src/RoboTerrain/
 1684  ls
 1685  find . -name 'spawn.py'
 1686  cd ros2_ws/src/dynamic_obstacles/
 1687  ls
 1688  ls -lsrt
 1689  conda env list
 1690  cd ..
 1691  ls
 1692  cd ..
 1693  ls
 1694  cd ..
 1695  ls
 1696  find . -name '*jack*.txt'
 1697  cd ..
 1698  ls
 1699  ls -lsrt
 1700  emacs jack_notes.txt &
 1701  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1702  ls
 1703  cd RoboTerrain/
 1704  find . -name '4wd_rover_gazebo.launch.py'
 1705  cd ros2_ws/
 1706  sudo apt -update
 1707  sudo apt update
 1708  apt list --upgradable
 1709  find . -name '4wd_rover_gazebo.launch.py'
 1710  emacs src/roverrobotics_ros2/roverrobotics_gazebo/launch/4wd_rover_gazebo.launch.py &
 1711  sudo timeshift --create --comments "Before ROS2 upgrade"
 1712  sudo apt install timeshift
 1713  df
 1714  cd ..
 1715  ls -lsrt
 1716  mv roverrobotics_ros2/ ~/backup_2025/
 1717  ls models/
 1718  cd models/
 1719  du * -sh
 1720  cd ..
 1721  ls
 1722  ls -lsrt
 1723  du * -sh
 1724  cd attention/
 1725  du * -sh
 1726  cd src/
 1727  find . -name 'island.sdf'
 1728  cd RoboTerrain/
 1729  ls ros2_ws/src/roverrobotics_ros2/roverrobotics_gazebo/worlds/
 1730  ls -l ros2_ws/src/roverrobotics_ros2/roverrobotics_gazebo/worlds/
 1731  find . -name office_construction.dae
 1732  cd 
 1733  find . -name office_construction.dae
 1734  cd src/
 1735  find . -name "office_construction.dae"
 1736  ls
 1737  cd RoboTerrain/
 1738  emacs ros2_ws/src/roverrobotics_ros2/roverrobotics_gazebo/worlds/office_cpr_construction.world &
 1739  cd
 1740  cd .gazebo/
 1741  ls
 1742  mkdir -p ~/.gazebo/models/cpr_office_construction/meshes
 1743  cp /home/jack/src/cpr_gazebo/cpr_office_gazebo/meshes/*.dae ~/.gazebo/models/cpr_office_construction/
 1744  ls ~/.gazebo/models/cpr_office_construction/
 1745  mkdir -p ~/.gazebo/models/cpr_office_construction/meshes
 1746  mv ~/.gazebo/models/cpr_office_construction/*.dae ~/.gazebo/models/cpr_office_construction/meshes/
 1747  ls ~/.gazebo/models/cpr_office_construction/meshes/
 1748  cd ~/src/RoboTerrain/
 1749  ign gazebo --gui-only
 1750  ign fuel list -p ~/.gazebo/models
 1751  ign fuel list -p ~/.gazebo/models --type model
 1752  cd ..
 1753  find . -name 'WoodFlooringMahoganyAfricanSanded001_COL_3K.jpg.001.jpg'
 1754  cd src/
 1755  cp cpr_gazebo/cpr_office_gazebo/meshes/*.jpg ~/.gazebo/models/cpr_office_construction/meshes/
 1756  cd ..
 1757  sudo apt update
 1758  sudo apt upgrade
 1759  sudo apt update
 1760  apt list --upgradable
 1761  cd src/RoboTerrain/
 1762  emacs ../jack_notes.txt &
 1763  history
 1764  emacs src/roverrobotics_ros2/roverrobotics_gazebo/launch/4wd_rover_gazebo.launch.py &
 1765  ls
 1766  cd ros2_ws/
 1767  ls
 1768  emacs src/roverrobotics_ros2/roverrobotics_gazebo/launch/4wd_rover_gazebo.launch.py &
 1769  emacs ~/src/attention/jack_readme.txt &
 1770  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1771  catkin make
 1772  colcon build --symlink-install
 1773  rm -rf build/hyperdog_msgs/ament_cmake_python/hyperdog_msgs/hyperdog_msgs
 1774  colcon build --symlink-install
 1775  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1776  colcon build --symlink-install
 1777  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1778  colcon build --symlink-install
 1779  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1780  cd ..
 1781  cd ros2_ws/
 1782  colcon build --symlink-install
 1783  export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/home/jack/src/cpr_gazebo
 1784  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1785  colcon build --symlink-install
 1786  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1787  colcon build --symlink-install
 1788  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1789  colcon build --symlink-install
 1790  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1791  colcon build --symlink-install
 1792  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1793  cd ..
 1794  emacs ros2_ws/src/roverrobotics_ros2/roverrobotics_gazebo/worlds/office_cpr_construction.world &
 1795  cd ros2_ws/
 1796  ign gazebo --gui-only
 1797  ign gazebo
 1798  colcon build --symlink-install
 1799  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1800  colcon build --symlink-install
 1801  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1802  ls
 1803  sudo apt update
 1804  apt list --upgradable
 1805  nvidia-smi
 1806  emacs src/attention/jack_readme.txt 
 1807  emacs src/attention/jack_readme.txt &
 1808  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py &
 1809  sudo apt update
 1810  apt list --upgradable
 1811  ls
 1812  ros2 topic list
 1813  ros2 topic echo /rover/pose_array 
 1814  cd src/
 1815  more jack_notes.txt
 1816  ros2 run teleop_twist_keyboard teleop_twist_keyboard
 1817  cd src/RoboTerrain/ros2_ws/src/
 1818  ls
 1819  emacs ign_ros2_pose_topic.py &
 1820  python ign_ros2_pose_topic.py office_geom rover_zero4wd
 1821  ign topic -l
 1822  python ign_ros2_pose_topic.py default rover_zero4wd
 1823  emacs src/attention/jack_readme.txt &
 1824  cd src/RoboTerrain/
 1825  git add --all
 1826  git commit -m 'construction world update'
 1827  emacs .gitignore &
 1828  cd ros2_ws/src/dynamic_obstacles/
 1829  ls
 1830  cd ..
 1831  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1832  ls *best*
 1833  rm best_p720.mp4 
 1834  cd ros2_ws/src/dynamic_obstacles/
 1835  python spawn.py 
 1836  ls
 1837  emacs triangle_trajectory.sdf &
 1838  python spawn.py 
 1839  more ../jack_notes.txt
 1840  git add --all
 1841  git commit -m "contstruction actor implementation walking in a triangle loop"
 1842  git push
 1843  cd ..
 1844  ls
 1845  cd ../data/social_nav/gazebo/gazebo_001/sequence_001/cam_img/1/data_rgb/
 1846  ls
 1847  cd
 1848  cd src/attention/
 1849  ls
 1850  ls -l
 1851  pushup
 1852  grep -r 'rospy'
 1853  grep -r 'rclpy'
 1854  cd ../RoboTerrain/
 1855  ls
 1856  grep -r 'rclpy'
 1857  ros2 topic list
 1858  cd ../attention/
 1859  grep -r '640
 1860  grep -r '640'
 1861  cd ..
 1862  ls
 1863  cd attention/
 1864  ls
 1865  more .gitignore 
 1866  emacs .gitignore &
 1867  cd src/RoboTerrain/
 1868  ls
 1869  emacs ../attention/jack_readme.txt &
 1870  cd ros2_ws/src/dynamic_obstacles/
 1871  ls
 1872  emacs generate_flat_trajectory.py &
 1873  python generate_flat_trajectory.py 
 1874  ls
 1875  emacs triangle_trajectory.sdf &
 1876  emacs spawn.py &
 1877  cd ..
 1878  history
 1879  python ign_ros2_pose_topic.py default rover_zero4wd
 1880  cd ..
 1881  find . -name '*bag*'
 1882  cd ../attention/
 1883  ls
 1884  cd preprocessed_data/
 1885  ls
 1886  cd ..
 1887  ls
 1888  grep -r '*.png'
 1889  grep -r '.png'
 1890  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1891  cd ~/data/social_nav/cafe/cafe_1/cam_img/1/data_rgb/
 1892  ls
 1893  ls | wc -l
 1894  file 0.png
 1895  cd data/social_nav/
 1896  ls
 1897  find . -name '*.py'
 1898  cd gazebo/
 1899  ls
 1900  emacs gazebo_capture.py &
 1901  emacs gazebo_captureV2.py &
 1902  ls
 1903  cd ..
 1904  ls
 1905  mv gazebo/gazebo_captureV2.py ./
 1906  ls
 1907  python gazebo_captureV2.py 
 1908  ls
 1909  mkdir gazebo_dataset
 1910  python gazebo_captureV2.py 
 1911  ls
 1912  emacs gazebo_captureV2.py &
 1913  ls
 1914  python gazebo_captureV2.py 
 1915  ls
 1916  cd gazebo_dataset/
 1917  ls
 1918  ros2 topic echo /world/default/dynamic_pose/info
 1919  cd ..
 1920  ls
 1921  ls gazebo_dataset/
 1922  python gazebo_captureV2.py 
 1923  ls gazebo_dataset/
 1924  ls
 1925  ls -lsrt
 1926  ls gazebo
 1927  ls gazebo_dataset/
 1928  ls gazebo
 1929  python gazebo_captureV2.py 
 1930  ls
 1931  ls gazebo_dataset/
 1932  ls gazebo_dataset/sequence_00
 1933  ls gazebo_dataset/sequence_001/
 1934  ls gazebo_dataset/sequence_001/data_rgb/
 1935  ls gazebo_dataset/sequence_001/data_rgb/ | wc -l
 1936  cd gazebo_dataset/
 1937  ls
 1938  rm -rf sequence_001/
 1939  rm -rf sequence_002/
 1940  cd ..
 1941  python gazebo_captureV2.py 
 1942  export OGRE_RTT_MODE=Copy  # Improves GPU rendering
 1943  export LIBGL_ALWAYS_SOFTWARE=0  # Ensure hardware rendering
 1944  sudo cpufreq-set -g performance
 1945  export OMP_NUM_THREADS=8
 1946  cd src/
 1947  ls
 1948  ls -lsrt
 1949  git clone https://github.com/ctu-vras/monoforce.git
 1950  cd monoforce/
 1951  find . -name 'monoforce.launch'
 1952  emacs ~/src/jack_notes.txt &
 1953  ros2 run rqt_image_view rqt_image_view
 1954  ls
 1955  cd
 1956  cd src/
 1957  ls
 1958  cd attention/
 1959  ls model_output/
 1960  ls checkpoints/
 1961  ls models/
 1962  mv checkpoints/depth_anything_v2_vits.pth models/
 1963  ls
 1964  nvidia-smi
 1965  ls ~/data/social_nav/gazebo
 1966  cd ros2_ws/
 1967  ls
 1968  cd src/dynamic_obstacles/
 1969  ls
 1970  ls -lsrt
 1971  python spawn.py 
 1972  nvidia-smi
 1973  glxinfo | grep "OpenGL renderer"
 1974  nvidia-smi
 1975  python spawn.py 
 1976  ls
 1977  ls -lsrt
 1978  emacs triangle_trajectory.sdf &
 1979  emacs spawn.py &
 1980  python spawn.py 
 1981  cd src/RoboTerrain/
 1982  ls
 1983  emacs ../attention/jack_readme.txt &
 1984  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1985  find . -name '4wd_rover_gazebo.launch.py'
 1986  emacs ./ros2_ws/src/roverrobotics_ros2/roverrobotics_gazebo/launch/4wd_rover_gazebo.launch.py &
 1987  colcon build --symlink-install
 1988  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1989  colcon build --symlink-install
 1990  ros2 launch roverrobotics_gazebo 4wd_rover_gazebo.launch.py
 1991  cd ~/data
 1992  cd social_nav/
 1993  ls
 1994  ls alley/
 1995  ls cafe/
 1996  ls courtyard/
 1997  mv courtyard/ gazebo
 1998  ls three_way/
 1999  mv three_way/ gazebo
 2000  ls
 2001  cd src/RoboTerrain/
 2002  ls
 2003  history > history_July_10th.txt
